# Generated by Django 5.0.1 on 2025-10-06 01:28

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('devices', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Geofence',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('geofence_type', models.CharField(choices=[('HOME', 'Home'), ('WORK', 'Work'), ('SAFE_ZONE', 'Safe Zone'), ('RESTRICTED', 'Restricted Area'), ('CUSTOM', 'Custom')], max_length=20)),
                ('center_latitude', models.DecimalField(decimal_places=6, max_digits=9)),
                ('center_longitude', models.DecimalField(decimal_places=6, max_digits=9)),
                ('radius', models.FloatField(help_text='Radius in meters')),
                ('is_active', models.BooleanField(default=True)),
                ('alert_on_entry', models.BooleanField(default=False)),
                ('alert_on_exit', models.BooleanField(default=True)),
                ('notify_guardians', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='geofences', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('latitude', models.DecimalField(decimal_places=6, max_digits=9)),
                ('longitude', models.DecimalField(decimal_places=6, max_digits=9)),
                ('altitude', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True)),
                ('accuracy', models.FloatField(blank=True, help_text='GPS accuracy in meters', null=True)),
                ('speed', models.FloatField(blank=True, help_text='Speed in km/h', null=True)),
                ('heading', models.FloatField(blank=True, help_text='Direction in degrees', null=True)),
                ('is_sos_location', models.BooleanField(default=False)),
                ('is_home_location', models.BooleanField(default=False)),
                ('is_work_location', models.BooleanField(default=False)),
                ('address', models.TextField(blank=True, null=True)),
                ('city', models.CharField(blank=True, max_length=100, null=True)),
                ('state', models.CharField(blank=True, max_length=100, null=True)),
                ('country', models.CharField(default='India', max_length=100)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('device', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='locations', to='devices.device')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='locations', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='LocationHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('total_distance', models.FloatField(default=0.0, help_text='Total distance traveled in km')),
                ('total_duration', models.DurationField(blank=True, null=True)),
                ('locations_count', models.IntegerField(default=0)),
                ('unique_places', models.IntegerField(default=0)),
                ('most_visited_place', models.CharField(blank=True, max_length=200, null=True)),
                ('average_speed', models.FloatField(blank=True, null=True)),
                ('max_speed', models.FloatField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='location_history', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='Route',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=200, null=True)),
                ('distance', models.FloatField(blank=True, help_text='Total distance in kilometers', null=True)),
                ('duration', models.DurationField(blank=True, help_text='Total journey time', null=True)),
                ('average_speed', models.FloatField(blank=True, help_text='Average speed in km/h', null=True)),
                ('waypoints', models.JSONField(blank=True, default=list)),
                ('polyline_data', models.TextField(blank=True, null=True)),
                ('started_at', models.DateTimeField()),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('end_location', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='end_routes', to='tracking.location')),
                ('start_location', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='start_routes', to='tracking.location')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='routes', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-started_at'],
            },
        ),
        migrations.AddIndex(
            model_name='location',
            index=models.Index(fields=['user', 'timestamp'], name='tracking_lo_user_id_2f6a14_idx'),
        ),
        migrations.AddIndex(
            model_name='location',
            index=models.Index(fields=['timestamp'], name='tracking_lo_timesta_81721e_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='locationhistory',
            unique_together={('user', 'date')},
        ),
    ]

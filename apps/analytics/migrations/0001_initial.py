# Generated by Django 5.0.1 on 2025-10-06 01:28

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('devices', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='SystemAnalytics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(unique=True)),
                ('total_users', models.IntegerField(default=0)),
                ('active_users', models.IntegerField(default=0)),
                ('new_registrations', models.IntegerField(default=0)),
                ('total_devices', models.IntegerField(default=0)),
                ('online_devices', models.IntegerField(default=0)),
                ('offline_devices', models.IntegerField(default=0)),
                ('total_sos_alerts', models.IntegerField(default=0)),
                ('active_sos_alerts', models.IntegerField(default=0)),
                ('resolved_sos_alerts', models.IntegerField(default=0)),
                ('average_response_time', models.DurationField(blank=True, null=True)),
                ('total_obstacles_detected', models.IntegerField(default=0)),
                ('most_common_obstacle', models.CharField(blank=True, max_length=20, null=True)),
                ('high_risk_areas', models.JSONField(blank=True, default=list)),
                ('total_distance_traveled', models.FloatField(default=0.0)),
                ('total_detection_time', models.DurationField(blank=True, null=True)),
                ('average_daily_usage', models.FloatField(default=0.0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='HeatmapData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('latitude', models.DecimalField(decimal_places=6, max_digits=9)),
                ('longitude', models.DecimalField(decimal_places=6, max_digits=9)),
                ('obstacle_count', models.IntegerField(default=0)),
                ('obstacle_types', models.JSONField(blank=True, default=dict)),
                ('risk_level', models.CharField(choices=[('LOW', 'Low'), ('MEDIUM', 'Medium'), ('HIGH', 'High'), ('CRITICAL', 'Critical')], default='LOW', max_length=10)),
                ('city', models.CharField(blank=True, max_length=100, null=True)),
                ('state', models.CharField(blank=True, max_length=100, null=True)),
                ('country', models.CharField(default='India', max_length=100)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['-obstacle_count'],
                'indexes': [models.Index(fields=['latitude', 'longitude'], name='analytics_h_latitud_fd1e62_idx'), models.Index(fields=['risk_level'], name='analytics_h_risk_le_97dead_idx')],
            },
        ),
        migrations.CreateModel(
            name='ObstacleDetection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('obstacle_type', models.CharField(choices=[('GROUND', 'Ground Level'), ('HEAD', 'Head Level'), ('POTHOLE', 'Pothole'), ('VEHICLE', 'Vehicle'), ('PEDESTRIAN', 'Pedestrian'), ('WALL', 'Wall'), ('STAIRS', 'Stairs'), ('DOOR', 'Door'), ('OTHER', 'Other')], max_length=15)),
                ('distance', models.FloatField(help_text='Distance to obstacle in centimeters')),
                ('confidence', models.FloatField(default=1.0, help_text='Detection confidence (0-1)')),
                ('latitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True)),
                ('longitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True)),
                ('address', models.TextField(blank=True, null=True)),
                ('sensor_type', models.CharField(default='ULTRASONIC', max_length=20)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('severity', models.CharField(choices=[('LOW', 'Low'), ('MEDIUM', 'Medium'), ('HIGH', 'High'), ('CRITICAL', 'Critical')], default='MEDIUM', max_length=10)),
                ('device', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='obstacle_detections', to='devices.device')),
            ],
            options={
                'ordering': ['-timestamp'],
                'indexes': [models.Index(fields=['device', 'timestamp'], name='analytics_o_device__8ad9ba_idx'), models.Index(fields=['obstacle_type', 'timestamp'], name='analytics_o_obstacl_0d0b50_idx')],
            },
        ),
        migrations.CreateModel(
            name='UserAnalytics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('total_distance', models.FloatField(default=0.0, help_text='Total distance in kilometers')),
                ('total_duration', models.DurationField(blank=True, null=True)),
                ('average_speed', models.FloatField(blank=True, null=True)),
                ('max_speed', models.FloatField(blank=True, null=True)),
                ('total_obstacles', models.IntegerField(default=0)),
                ('ground_obstacles', models.IntegerField(default=0)),
                ('head_obstacles', models.IntegerField(default=0)),
                ('pothole_detections', models.IntegerField(default=0)),
                ('vehicle_detections', models.IntegerField(default=0)),
                ('safety_score', models.FloatField(default=0.0, help_text='Safety score (0-100)')),
                ('risk_level', models.CharField(choices=[('LOW', 'Low'), ('MEDIUM', 'Medium'), ('HIGH', 'High')], default='LOW', max_length=10)),
                ('unique_locations', models.IntegerField(default=0)),
                ('most_visited_area', models.CharField(blank=True, max_length=200, null=True)),
                ('route_efficiency', models.FloatField(default=0.0, help_text='Route efficiency score')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='analytics', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-date'],
                'unique_together': {('user', 'date')},
            },
        ),
    ]
